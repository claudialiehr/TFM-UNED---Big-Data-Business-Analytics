import streamlit as st
from datetime import datetime
import json

# -------------------------------
# Configuraci√≥n inicial
# -------------------------------
st.set_page_config(
    page_title="AdoptAPP - ¬°Adopta no compres!",
    layout="centered",
    initial_sidebar_state="collapsed"  
)

# -------------------------------
# Men√∫ lateral 
# -------------------------------
with st.sidebar:
    st.title("‚ò∞ Men√∫")
    pagina = st.radio("Navegaci√≥n", [
        "Formulario de adopci√≥n",
        "Animales en adopci√≥n",
        "Tips de alimentaci√≥n",
        "Historias de adopci√≥n",
        "Ley de Bienestar Animal"
    ])

# -------------------------------
# Funciones auxiliares
# -------------------------------
def clasificar_adoptante(
    edad, tiempo_libre, redes_seguridad, experiencia, tipo_vivienda, permiso_mascotas
):
    if permiso_mascotas == "No":
        return -1, "NO APTO", "error"

    puntos = 0
    # Edad
    if edad < 25:
        puntos += 1
    elif 25 <= edad <= 44:
        puntos += 2
    elif 45 <= edad <= 60:
        puntos += 1
    else:
        puntos -= 1
    # Tiempo libre
    if tiempo_libre == "2-5 horas":
        puntos += 1
    elif tiempo_libre == ">5 horas":
        puntos += 2
    # Seguridad
    if redes_seguridad == "S√≠":
        puntos += 2
    # Experiencia
    if experiencia == "Media":
        puntos += 1
    elif experiencia == "Alta":
        puntos += 2
    # Vivienda
    if tipo_vivienda in ["Piso", "Casa", "Casa/Chalet"]:
        puntos += 2
    elif tipo_vivienda == "√Åtico":
        puntos += 1

    # Umbrales
    if puntos >= 7:
        return puntos, "APTO", "success"
    elif 4 <= puntos <= 6:
        return puntos, "INTERMEDIO", "warning"
    else:
        return puntos, "NO APTO", "error"


def enviar_resumen_por_webhook(payload: dict, webhook_url: str):
    if not webhook_url:
        return False, "No hay WEBHOOK_URL configurado (no se env√≠a)."
    try:
        import urllib.request
        req = urllib.request.Request(
            webhook_url,
            data=json.dumps(payload).encode("utf-8"),
            headers={"Content-Type": "application/json"},
            method="POST",
        )
        with urllib.request.urlopen(req, timeout=10) as resp:
            code = resp.getcode()
            if 200 <= code < 300:
                return True, f"Enviado correctamente (HTTP {code})."
            return False, f"Error HTTP {code} al enviar."
    except Exception as e:
        return False, f"No se pudo enviar: {e}"


WEBHOOK_URL = st.secrets.get("WEBHOOK_URL", None)
PROTECTORA_EMAIL = st.secrets.get("PROTECTORA_EMAIL", None)

# -------------------------------
# P√°gina 1: Formulario
# -------------------------------
if pagina == "Formulario de adopci√≥n":
    st.title("üêæ AdoptAPP")
    st.subheader("Cuestionario de preevaluaci√≥n")
    st.markdown("Completa el formulario. Revisaremos tu solicitud a la mayor brevedad.")

    with st.form("adoption_form"):
        nombre = st.text_input("üë§ Nombre completo del adoptante")
        telefono = st.text_input("üì± Tel√©fono de contacto (m√≥vil)")
        nombre_animal = st.text_input("üê∂üò∫ Nombre del animal que quieres adoptar")

        edad = st.slider("Edad", 18, 80, 30)
        genero = st.selectbox("G√©nero", ["Mujer", "Hombre", "No me representa"])
        ubicacion = st.text_input("Ciudad / Provincia")
        tipo_vivienda = st.selectbox("Tipo de vivienda", ["Piso", "Casa", "√Åtico", "Vivienda Compartida"])

        permiso_mascotas = st.radio(
            "üè† ¬øVives de alquiler y tienes permiso para tener mascotas?",
            ["S√≠", "No", "No aplica (vivienda propia)"]
        )

        tiempo_libre = st.selectbox(
            "‚è∞ ¬øCu√°nto tiempo tienes al d√≠a para el animal?",
            ["1-2 horas", "2-5 horas", ">5 horas"]
        )

        redes_seguridad = st.radio(
            "üîí ¬øInstalar√≠as redes de seguridad en ventanas/balcones para el gato?",
            ["S√≠", "No", "No aplica"]
        )

        experiencia = st.selectbox(
            "üêæ ¬øCu√°l es tu experiencia con animales de compa√±√≠a?",
            ["Baja", "Media", "Alta"]
        )

        consent = st.checkbox(
            "Autorizo a enviar mi solicitud a la protectora para su evaluaci√≥n",
            value=False
        )

        submit = st.form_submit_button("Enviar solicitud")

    if submit:
        puntos, etiqueta, color = clasificar_adoptante(
            edad, tiempo_libre, redes_seguridad, experiencia, tipo_vivienda, permiso_mascotas
        )

        resumen = {
            "timestamp": datetime.utcnow().isoformat() + "Z",
            "etiqueta": etiqueta,
            "puntos": puntos,
            "nombre": nombre,
            "telefono": telefono,
            "nombre_animal": nombre_animal,
            "edad": edad,
            "genero": genero,
            "ubicacion": ubicacion,
            "tipo_vivienda": tipo_vivienda,
            "permiso_mascotas": permiso_mascotas,
            "tiempo_libre": tiempo_libre,
            "redes_seguridad": redes_seguridad,
            "experiencia": experiencia,
            "destinatario_protectora": PROTECTORA_EMAIL,
            "origen": "AdoptAPP (Streamlit)"
        }

        if consent:
            ok, msg = enviar_resumen_por_webhook(resumen, WEBHOOK_URL)
            if ok:
                st.success("‚úÖ Tu solicitud se ha enviado correctamente a la protectora.")
            else:
                st.error("‚ö†Ô∏è No se pudo enviar autom√°ticamente. Intenta m√°s tarde.")
        else:
            st.info("‚ÑπÔ∏è No se enviar√° la solicitud porque no diste consentimiento.")

    st.caption("Al enviar confirmas que los datos son veraces. El env√≠o a la protectora solo se realizar√° si otorgas tu consentimiento.")
    with st.expander("‚ÑπÔ∏è Informaci√≥n sobre protecci√≥n de datos (RGPD)"):
        st.markdown("""
**Responsable:** [Nombre de la protectora]  
**Finalidad:** Gestionar la preevaluaci√≥n de solicitudes de adopci√≥n.  
**Base jur√≠dica:** Consentimiento de la persona interesada (art. 6.1.a RGPD).  
**Destinatarios:** La protectora indicada; no se realizan cesiones a terceros salvo obligaci√≥n legal.  
**Conservaci√≥n:** Durante el tiempo necesario para la tramitaci√≥n de la solicitud y los plazos legales aplicables.  
**Derechos:** Acceso, rectificaci√≥n, supresi√≥n, oposici√≥n, limitaci√≥n y portabilidad.  
**Contacto:** [email de la protectora]  
**Informaci√≥n adicional:** No recopilamos tu IP ni datos de navegaci√≥n en este formulario m√°s all√° de lo estrictamente necesario para el env√≠o.
""")

# -------------------------------
# P√°gina 2: Animales
# -------------------------------
elif pagina == "Animales en adopci√≥n":
    st.title("üêï Animales en adopci√≥n")
    st.info("Aqu√≠ puedes mostrar un listado con fotos y fichas de animales en adopci√≥n.")
    st.image("https://place-puppy.com/300x300", caption="Luna ‚Äì 2 a√±os, Protectora A")
    st.image("https://placekitten.com/300/300", caption="Michi ‚Äì 1 a√±o, Protectora B")

# -------------------------------
# P√°gina 3: Tips
# -------------------------------
elif pagina == "Tips de alimentaci√≥n":
    st.title("üçñ Tips de alimentaci√≥n y cuidados")
    st.markdown("- [Gu√≠a de piensos](https://example.com)")
    st.markdown("- [Tiendas recomendadas](https://example.com)")

# -------------------------------
# P√°gina 4: Historias
# -------------------------------
elif pagina == "Historias de adopci√≥n":
    st.title("üìñ Historias de adopciones exitosas")
    st.success("‚ÄúLuna fue adoptada en 2023 y ahora vive feliz con su nueva familia.‚Äù")
    st.image("https://place-puppy.com/400x300")

# -------------------------------
# P√°gina 5: Ley
# -------------------------------
elif pagina == "Ley de Bienestar Animal":
    st.title("‚öñÔ∏è Ley de Bienestar Animal")
    st.markdown("Resumen de los puntos clave de la ley...")
    st.markdown("[Consulta el texto completo en el BOE](https://www.boe.es)")
